//export const mintNFT = 

//REPLACE THIS WITH YOUR CONTRACT NAME + ADDRESS
import BottomShot from 0xa019c66fdef2931c
// This remains the same 
import NonFungibleToken  from 0xa019c66fdef2931c

transaction

  recipient: receiver;
  name: "Shapes NFT";
  description: "The Best NFT";
  thumbnail: "NFT Thumbnail";
 ){
  prepare(signer: AuthAccount) {
      if signer.borrow<&BottomShot.Collection>
      (from: BottomShot.CollectionStoragePath) != nil
        {
        return}
      }
      // Create a new empty collection
      let collection <- BottomShot.createEmptyCollection()
      // save it to the account
      signer.save(<-collection, to: BottomShot.CollectionStoragePath)

      // create a public capability for the collection
      signer.link<&{NonFungibleToken.CollectionPublic}>(
        BottomShot.CollectionPublicPath,
        target: BottomShot.CollectionStoragePath
      )
  }


  execute {
    // Borrow the recipient's public NFT collection reference
    let receiver = getAccount(recipient)
      .getCapability(BottomShot.CollectionPublicPath)
      .borrow<&{NonFungibleToken.CollectionPublic}>()
      ?? panic("Could not get receiver reference to the NFT Collection")

    // Mint the NFT and deposit it to the recipient's collection
    self.BottomShot.mintNFT(
      recipient: receiver,
      name: "",
      description: "",
      thumbnail: ""
    )
    
    log("Minted an NFT and stored it into the collection")
  } 
}